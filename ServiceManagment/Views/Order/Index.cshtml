@model IEnumerable<ServiceManagment.Models.Order>

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<h1>ORDERS LIST</h1>

<h1>LIST OF ALL ORDERS</h1>
<a type="button" class="btn btn-danger" asp-controller="Order" 
    asp-action="Index">All orders</a>

<a type="button" class="btn btn-danger" asp-controller="Order" 
    asp-action="ListOrdersByStatus" asp-route-status="New">New orders</a>

<a type="button" class="btn btn-danger" asp-controller="Order" 
    asp-action="ListOrdersByStatus" asp-route-status="InProgress">In progress orders</a>

<a type="button" class="btn btn-danger" asp-controller="Order" 
    asp-action="ListOrdersByStatus" asp-route-status="Finished">Finished orders</a>

<table class="table">
    <thead class="thead-dark">
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Order status</th>
            <th scope="col">Owner</th>
            <th scope="col">Product type</th>
            <th scope="col">Product name</th>
            <th scope="col">Product fault</th>
            <th scope="col">To pay</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var order in Model)
        {   
            <tr>
                <th scope="row">@order.Id</th>
                <td>@order.OrderStatus</td>
                <td>@order.Customer.Name</td>
                <td>@order.Product.ProductType</td>
                <td>@order.Product.ProducerName @order.Product.Model</td>
                <td>@order.Product.Fault</td>
                <td>@order.Payment.ToPay ,-</td>
                <td>
                    <a type="button" class="btn btn-primary" asp-controller="Order"
                        asp-action="Detail" asp-route-id="@order.Id">Detail</a>
                </td>
            </tr>   
        }
    </tbody>
</table>
